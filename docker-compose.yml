version: '3'

services:
  nats-server:
    image: nats:latest
    ports:
      - 8222:8222

  client-gateway:
    build: ./client-gateway
    ports:
      - ${CLIENT_GATEWAY_PORT}:3000
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: pnpm run start:dev
    environment:
      - PORT=3000
      - NATS_SERVERS=${NATS_SERVERS}

  products-service:
    build: ./products-service
    volumes:
      - ./products-service/src:/usr/src/app/src
    command: pnpm run start:dev
    environment:
      - PORT=3000
      - NATS_SERVERS=${NATS_SERVERS}
      - DATABASE_URL=file:./dev.db

  orders-service:
    build: ./orders-service
    volumes:
      - ./orders-service/src:/usr/src/app/src
    command: pnpm run start:dev
    environment:
      - PORT=3002
      - DATABASE_URL=postgresql://postgres:123456@orders-db:5432/ordersdb?schema=public
      - NATS_SERVERS=${NATS_SERVERS}
    depends_on:
      - orders-db

  orders-db:
    container_name: orders_database
    image: postgres:16.2
    restart: always
    volumes:
      - ./orders-service/postgres:/var/lib/postgresql/data
    ports:
      - 5433:5432
    environment:
      POSTGRES_DB: ordersdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456


  auth-service:
    build: ./auth-service
    volumes:
      - ./auth-service/src:/usr/src/app/src
    command: pnpm run start:dev
    environment:
      - PORT=3007
      - NATS_SERVERS=${NATS_SERVERS}
      - DB_URL=${AUTH_SERVICE_DB_URL}

  # =================
  # Payments Service
  # =================
    
  payments-service:
    build: ./payments-service
    ports:
      - ${PAYMENTS_SERVICE_PORT}:3003
    volumes:
      - ./payments-service/src:/usr/src/app/src
    command: pnpm run start:dev
    environment:
      - PORT=${PAYMENTS_SERVICE_PORT}
      - NATS_SERVERS=${NATS_SERVERS}
      - STRIPE_API_KEY=${STRIPE_API_KEY}
      - SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - CANCEL_URL=${STRIPE_CANCEL_URL}
      - ENDPOINT_SECRET=${STRIPE_ENDPOINT_SECRET}

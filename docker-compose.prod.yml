
version: '3'

services:
  nats-server:
    image: nats:latest

  client-gateway:
    build:
      context: ./client-gateway
      dockerfile: dockerfile.prod
    image: client-gateway-prod
    ports:
      - ${CLIENT_GATEWAY_PORT}:${CLIENT_GATEWAY_PORT}
    environment:
      - PORT=${CLIENT_GATEWAY_PORT}
      - NATS_SERVERS=${NATS_SERVERS}


  products-service:
    build: 
      context: ./products-service
      dockerfile: dockerfile.prod
    image: products-service
    environment:
      - PORT=3000
      - NATS_SERVERS=${NATS_SERVERS}
      - DATABASE_URL=file:./dev.db

  # orders-service:
  #   build: ./orders-service
  #   volumes:
  #     - ./orders-service/src:/usr/src/app/src
  #   command: pnpm run start:dev
  #   environment:
  #     - PORT=3002
  #     - DATABASE_URL=postgresql://postgres:123456@orders-db:5432/ordersdb?schema=public
  #     - NATS_SERVERS=${NATS_SERVERS}
  #   depends_on:
  #     - orders-db
  #
  # orders-db:
  #   container_name: orders_database
  #   image: postgres:16.2
  #   restart: always
  #   volumes:
  #     - ./orders-service/postgres:/var/lib/postgresql/data
  #   ports:
  #     - 5433:5432
  #   environment:
  #     POSTGRES_DB: ordersdb
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: 123456

  auth-service:
    build: 
      context: ./auth-service
      dockerfile: dockerfile.prod
    image: auth-service
    environment:
      - PORT=3007
      - NATS_SERVERS=${NATS_SERVERS}
      - DATABASE_URL=${AUTH_SERVICE_DB_URL}
      - JWT_SECRET=${JWT_SECRET}

  # =================
  # Payments Service
  # =================
    
  payments-service:
    build: 
      context: ./payments-service
      dockerfile: dockerfile.prod
    ports:
      - ${PAYMENTS_SERVICE_PORT}:3003
    environment:
      - PORT=${PAYMENTS_SERVICE_PORT}
      - NATS_SERVERS=${NATS_SERVERS}
      - STRIPE_API_KEY=${STRIPE_API_KEY}
      - SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - CANCEL_URL=${STRIPE_CANCEL_URL}
      - ENDPOINT_SECRET=${STRIPE_ENDPOINT_SECRET}
